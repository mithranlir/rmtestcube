<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<description>
		Partial configuration of Spring Security
		to activate HTTP Basic authentication scheme.
	</description>
	
	
	<!-- Authentication for the locally exposed content server. -->
	<!-- Does not goes through the contextValuePropagator filter. -->
	<security:http auto-config="false"
				   entry-point-ref="authenticationEntryPoint"
				   authentication-manager-ref="authenticationManager"
				   use-expressions="true"
				   pattern="/webservices/content-server/**">
		<security:intercept-url pattern="/webservices/content-server/rest/**" 	access="permitAll" method="OPTIONS"/>
		<security:intercept-url pattern="/webservices/content-server/**"  		access="hasRole('ROLE_USER')"/>
		<security:custom-filter position="BASIC_AUTH_FILTER" ref="authenticationFilter"/>
	</security:http>

	<!-- HTTP Basic authentication (Spring Security) -->
	<!-- We define that only users granted with ROLE_USER can connect -->
	<security:http auto-config="false"
				   entry-point-ref="authenticationEntryPoint"
				   authentication-manager-ref="authenticationManager"
				   use-expressions="true"
				   pattern="/**">

		<!-- Permits all OPTION requests to the server -->
		<security:intercept-url pattern="/webservices/rest/**" access="permitAll" method="OPTIONS"/>
		
		<!-- Technical urls. Allow ROLE_USER not to require every user to have ROLE_TECH nor
		     clients to use technical credentials to query them -->
		<security:intercept-url pattern="/webservices/IdGenerator/**"     access="hasAnyRole('ROLE_USER','ROLE_TECH')" />
		<security:intercept-url pattern="/webservices/LongPolling/**"     access="hasAnyRole('ROLE_USER','ROLE_TECH')" />
		<security:intercept-url pattern="/webservices/Licensing/**"       access="hasAnyRole('ROLE_USER','ROLE_TECH')" />
		<security:intercept-url pattern="/remoting/IdGenerator/**"        access="hasAnyRole('ROLE_USER','ROLE_TECH')" />
		<security:intercept-url pattern="/remoting/LongPolling/**"        access="hasAnyRole('ROLE_USER','ROLE_TECH')" />
		<security:intercept-url pattern="/remoting/Licensing/**"          access="hasAnyRole('ROLE_USER','ROLE_TECH')" />

		<!-- User space URLs -->
		<security:intercept-url pattern="/**"                             access="hasRole('ROLE_USER')"                />

		<security:custom-filter position="BASIC_AUTH_FILTER" ref="authenticationFilter"/>

		<security:custom-filter position="LAST" ref="contextValuePropagator" />
	</security:http>

</beans>
